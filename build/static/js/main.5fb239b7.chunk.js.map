{"version":3,"sources":["components/login.component.js","components/navigation/appBar.component.js","components/chat.component.js","components/home.component.js","components/pt/clientList.component.js","components/pt/home.component.js","components/register.component.js","components/client/workoutList.component.js","components/client/workout.component.js","components/pt/workoutList.component.js","components/pt/workout.component.js","components/messages.component.js","components/account/account.component.js","components/navigation/bottomNavigation.component.js","components/pt/exerciseList.component.js","components/client/exerciseList.component.js","components/weightGraph.component.js","components/account/body.component.js","data/exercises.js","components/pt/newWorkout.component.js","components/account/accountEdit.component.js","components/account/changePassword.component.js","components/account/userRole.component.js","components/client/recordWorkout.component.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","onChangeEmail","bind","onChangePassword","onSubmit","state","email","password","errorMessage","showError","e","this","setState","target","value","fetch","method","credentials","headers","Accept","then","res","json","log","redirect","window","location","catch","error","console","$","click","animate","scrollTop","offset","top","preventDefault","loginData","JSON","stringify","body","auth","className","autoPlay","loop","muted","playsInline","poster","src","type","style","marginTop","alt","height","width","role","textAlign","fontSize","id","name","placeholder","onChange","required","href","float","lineHeight","Component","useStyles","makeStyles","theme","root","flexGrow","left","menuButton","marginRight","spacing","title","ButtonAppBar","classes","AppBar","position","background","boxShadow","paddingTop","Toolbar","back","to","color","IconButton","edge","aria-label","Typography","variant","pageName","userTo","Home","exerciseList","client","assigned","Box","overflow","Flex","flexDirection","flex","Text","fontFamily","firstName","lastName","fontWeight","onClick","delete","index","addClient","clients","newClient","currentUser","message","clientsLoading","getClients","modal","showSuccess","duplicate","forEach","a","success","data-toggle","data-target","marginLeft","map","key","data-dismiss","onChangeFirstName","onChangeLastName","changePtTrue","changePtFalse","ptBool","registerData","defaultChecked","workoutList","workout","exercises","length","Date","dateCreated","getDate","getMonth","getFullYear","display","start","Workout","getWorkouts","loadWorkouts","startWorkout","workoutsLoading","workouts","monday","tuesday","wednesday","thursday","friday","saturday","sunday","showMessage","assignment","workoutRecorded","i","day","push","history","pathname","assign","edit","selectedClients","createNewWorkout","deleteWorkout","editWorkout","openModal","assignWorkout","allClients","assignBttn","workoutSelected","successMsg","fill","confirm","_id","reload","assignmentData","padding","border","borderRadius","borderColor","checkboxChange","htmlFor","disabled","socket","Messages","messages","getUser","errorMsg","userList","userListLoaded","startChat","loadMessages","WebSocket","send","messageType","onopen","onmessage","parse","data","resetStates","getMessages","getAllUsers","createMessageLists","inList","j","userFrom","newUserList","newUserList2","sort","b","date","userEmail","user","string","charAt","toUpperCase","slice","List","users","ListItem","ListItemIcon","read","ListItemText","primary","captitaliseFirstLetter","secondary","text","textShadow","onChangeText","markMessageAsRead","document","getElementById","scrollIntoView","messageData","newMessage","sendMessage","messageID","classname","messageFrom","renderMessage","Account","listClick","logout","url","component","Divider","bottom","zIndex","borderTop","LabelBottomNavigation","React","useState","substr","setValue","useHistory","BottomNavigation","event","newValue","BottomNavigationAction","disableTouchRipple","label","icon","weightStack","dateStack","weightGraph","weights","weight","monthNames","d","createGraph","labels","reverse","datasets","lineTension","backgroundColor","borderWidth","options","legend","Weight","userHeight","allWeights","handleValueWeight","handleValueHeight","renderSlideRulerWeight","renderSlideRulerHeight","addWeight","getWeight","deleteWeight","updateHeight","getHeight","SlideRuler","el","refs","slideRulerWeight","maxValue","minValue","currentValue","handleValue","precision","fontColor","slideRulerHeight","weightData","heightData","weightsData","ListItemSecondaryAction","ref","exercise","notes","getExerciseData","exerciseData","exerciseType","customName","exerciseTypeValue","Exercise","exerciseValue","parseInt","bodyPartValue","linkifyHtml","defaultProtocol","distance","minutes","seconds","sets","repetitions","margin","dangerouslySetInnerHTML","__html","savedExercises","addExercise","deleteExercise","bodyParts","showExerciseList","showBodyPart","showCardioOptions","disableBttn","showTime","showDistance","showNotes","showExercises","workoutName","workoutID","showWeight","showSets","val","filteredItems","concat","workoutData","newWorkoutID","oldWorkoutID","saveWorkout","exerciseTypeChange","hidden","bodyPart","exerciseChange","loadExercises","inputMode","max","step","rows","accountEdit","successMessage","fillDetails","getCurrentUser","userData","setTimeout","autoComplete","onChangeCurrentPassword","onChangeNewPassword","onChangeNewConPassword","currentPassword","newPassword","newConPassword","complete","missed","completedExercises","finishWorkout","completedExercise","missedExercise","completed","exerciseID","PrivateRoute","authed","wasInitialised","rest","render","App","checkAuth","path","exact","Register","HomePT","WorkoutPT","NewWorkout","RecordWorkout","Chat","Body","AccountEdit","ChangePassword","UserRole","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5fb239b7.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport '../App.css';\r\nimport $ from 'jquery';\r\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\nimport HttpsIcon from '@material-ui/icons/Https';\r\nimport WebIcon from '@material-ui/icons/Web';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errorMessage: '',\r\n            showError: false\r\n        }\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/api/auth/', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                  }\r\n                }\r\n            ).then(res => {\r\n                res.json().then(log => {\r\n                     if (log.redirect === '/home') {    \r\n                        window.location = \"/home\"\r\n                     } else {\r\n                         \r\n                     }\r\n                });\r\n                }).catch(error => console.log(error))\r\n\r\n\r\n        $(function() {\r\n            $('.scroll-down').click (function() {\r\n                $('html, body').animate({scrollTop: $('section.scrollTo').offset().top }, 'slow');\r\n                return false;\r\n            });\r\n        });\r\n      }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginData = JSON.stringify(this.state);\r\n\r\n        fetch('/api/login', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: loginData\r\n        }).then(res => {\r\n            res.json().then(log => {\r\n                if (log.auth === true) {\r\n                    window.location = '/home'\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: \"Incorrect email or password\",\r\n                        showError: true,\r\n                        password: \"\"                    \r\n                    });\r\n                }\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            <div>\r\n            <div className=\"fullscreen-bg\">\r\n                <video autoPlay loop muted playsInline poster=\"\" className=\"fullscreen-bg__video\">\r\n                    <source src=\"/login-video.mp4\" type=\"video/mp4\"/>\r\n                </video>\r\n            </div>\r\n                <div style={{marginTop: 40}}>\r\n\r\n                <p className=\"appTitle\">\r\n                    <img src=\"logo512.png\" alt=\"logo\" height=\"60\" width=\"60\"/>\r\n                    CloudPT\r\n                </p><br/>\r\n                \r\n                <div className=\"homeBackground\">\r\n                { this.state.showError?\r\n                    <div>\r\n                    <h4 className=\"alert alert-danger alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.errorMessage } </h4>\r\n                    </div>\r\n                : null\r\n                }\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <input  type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email Address\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeEmail}\r\n                                required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                                type=\"password\" \r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"LOGIN\" className=\"btn btn-success container\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            \r\n            <br/>\r\n            <div >\r\n                <a href=\"/register\" className=\"btn btn-primary container\">SIGN UP HERE</a>\r\n            </div><br/><br/>\r\n\r\n\r\n            <div className=\"bubbleCard\">\r\n                    <h6>  <b>Install this app on your phone: Tap </b>\r\n                    <img src=\"./safari.png\" width=\"25px\" height=\"25px\" alt=\"Safari Share Button\"/> or <img src=\"./chrome.png\" width=\"8px\" height=\"25px\" alt=\"Chrome Menu Button\"/> and then Add to Homescreen! </h6>\r\n            </div><br/>\r\n\r\n            \r\n            <div className=\"scroll-down-info\"> Check out the app features!</div>\r\n                <section>\r\n                    <a href=\"#scroll\" className=\"scroll-down\"> </a>\r\n                </section>\r\n                \r\n                <section className=\"scrollTo\"><br/>\r\n                    <div className=\"homeBackground\">\r\n                        <FitnessCenterIcon style={{fontSize: \"65px\", float: \"left\"}}/>\r\n                        <h3 style={{fontSize: \"30px\", lineHeight: \"60px\"}}>Workout Creation</h3>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Create custom workouts for clients</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Assign workouts to your clients</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>View clients workout history</li>\r\n                        \r\n                        <br/>\r\n                        <ChatIcon style={{fontSize: \"65px\", float: \"left\"}}/>\r\n                        <h3 style={{fontSize: \"30px\", lineHeight: \"55px\"}}>Instant Messaging</h3>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Contact your clients instantly</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Easy to use inbuilt chat feature</li>\r\n                        \r\n\r\n                        <br/>\r\n                        <TimelineIcon style={{fontSize: \"65px\", float: \"left\"}}/>\r\n                        <h3 style={{fontSize: \"30px\", lineHeight: \"55px\"}}>Track Progress</h3>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>See progress your clients are making during programs</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}></li>\r\n                        \r\n\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    <div className=\"homeBackground\">\r\n                        <DevicesIcon style={{fontSize: \"65px\", float: \"left\"}}/>\r\n                        <h3 style={{fontSize: \"30px\", lineHeight: \"60px\"}}>Cross-Platform</h3>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Use the application anywhere</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Works on any device</li>\r\n\r\n                        <br/>\r\n                        <WebIcon style={{fontSize: \"65px\", float: \"left\"}}/> \r\n                        <h3 style={{fontSize: \"25px\", lineHeight: \"60px\"}}>Web Application</h3>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Offline operation</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Fast and lightweight</li>\r\n\r\n                        <br/>\r\n                        <HttpsIcon style={{fontSize: \"65px\", float: \"left\"}}/> \r\n                        <h3 style={{fontSize: \"25px\", lineHeight: \"60px\"}}>Secure and Protected</h3>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>Up-to-date with the latest security</li>\r\n                        <li className=\"list-group-item\" style={{textAlign: \"center\"}}>HTTPS ensures your information is protected</li>\r\n                    </div>\r\n                    <br/>\r\n                </section>\r\n            </div>\r\n            </div>\r\n        </Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n// eslint-disable-next-line\r\nimport {BrowseRouter as Router, Route, Link} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(0),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\"\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function ButtonAppBar(props) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar position=\"fixed\" style={{ background: \"linear-gradient(90deg, rgba(117,236,117,1) 0%, rgba(92,184,92,1) 52%, rgba(71,140,71,1) 100%)\", boxShadow: 'none', paddingTop: \"30px\"}}>\r\n            <Toolbar>\r\n            {props.back? \r\n            <Link to={props.back} style={{color: \"#a3a3a3\", width: \"20px\"}}>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"ArrowBackIosIcon\">\r\n                <ArrowBackIosIcon />\r\n            </IconButton>\r\n            </Link>\r\n            \r\n            : null}\r\n            \r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                {props.pageName}\r\n            </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <br/><br/><br/><p/>\r\n        </div>\r\n    );\r\n}","import React, { Component, Fragment } from 'react';\r\nimport AppBar from './navigation/appBar.component';\r\n\r\nvar messages = []\r\nvar userTo;\r\nexport default class Messages extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n            currentUser: this.props.location.currentUser,\r\n            userTo: this.props.location.userTo\r\n        }\r\n        this.onChangeText = this.onChangeText.bind(this);\r\n        try{\r\n            this.props.location.messages.forEach(message => this.markMessageAsRead(message))\r\n        } catch (e){\r\n            window.location = '/messages'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById('scroll').scrollIntoView();\r\n        this.props.location.socket.onmessage = e => {\r\n            var messageData = JSON.parse(e.data)\r\n            if(messageData.messageType === \"messageSent\" && messageData.userFrom[0].email === this.state.userTo.email){\r\n                // Push incoming message to array\r\n                e.preventDefault();\r\n                var newMessage = ({\r\n                    text: messageData.text,\r\n                    user:{\r\n                        firstName: messageData.userFrom[0].firstName,\r\n                        lastName: messageData.userFrom[0].lastName,\r\n                        email: messageData.userFrom[0].email\r\n                    },\r\n                    userTo: messageData.userTo.email,\r\n                    newMessage: true,\r\n                    _id: messageData._id\r\n                })\r\n                messages.push(newMessage)\r\n                this.setState({});\r\n                this.markMessageAsRead(newMessage);\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        document.getElementById('scroll').scrollIntoView();\r\n    }\r\n\r\n\r\n\r\n    onChangeText(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.text !== \"\")\r\n        {\r\n            \r\n            messages.push({\r\n                text: this.state.text,\r\n                userTo:{\r\n                    firstName: this.props.location.currentUser.firstName,\r\n                    lastName: this.props.location.currentUser.lastName,\r\n                    email: this.props.location.currentUser.email\r\n                }\r\n            })\r\n            await this.sendMessage();\r\n        }\r\n        this.setState({text: \"\"});\r\n    }\r\n\r\n    async sendMessage(){\r\n        // Creating JSON string of page state\r\n        const messageData = JSON.stringify(this.state)\r\n        var messageID;\r\n        await fetch('/api/messages', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n              body: messageData\r\n        }).then(async res => {\r\n            await res.json().then(async log => {\r\n                messageID = log._id\r\n            });\r\n            }).catch(error => console.log(error))\r\n\r\n        this.props.location.socket.send(JSON.stringify({\r\n            messageType: \"messageSent\",\r\n            _id: messageID,\r\n            text: this.state.text,\r\n            userTo: this.state.userTo,\r\n            userFrom: this.state.currentUser\r\n        }))\r\n    }\r\n\r\n    markMessageAsRead(message){\r\n        const messageData = JSON.stringify(message)\r\n        if(message.userTo === this.state.currentUser[0].email || message.newMessage){\r\n            fetch('/api/message/read', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                  },\r\n                body: messageData\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    renderMessage(message){\r\n        var classname, messageFrom;\r\n        if(message.userTo === this.props.location.currentUser[0].email){\r\n            // message is being sent to me\r\n            classname = \"notCurrentUser\";\r\n            messageFrom = this.state.userTo;\r\n            \r\n        } else {\r\n            // message is being sent from me\r\n            classname = \"currentUser\";\r\n            messageFrom = this.props.location.currentUser[0];\r\n\r\n        }\r\n        return (\r\n                <div className={classname}>\r\n\r\n                    <div className=\"messageContent\">\r\n                        <div className=\"username\">\r\n                            {this.captitaliseFirstLetter(messageFrom.firstName)} {this.captitaliseFirstLetter(messageFrom.lastName)}\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            {message.text}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    captitaliseFirstLetter(string){\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    render() {\r\n        messages = this.props.location.messages;\r\n        userTo = this.props.location.userTo;\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName={userTo.firstName.toUpperCase() + \" \" + userTo.lastName.toUpperCase()} back=\"/messages\"/>\r\n\r\n                    \r\n                    {messages.map((message, index) => <ul key={index}>{this.renderMessage(message)}</ul>)}\r\n                    \r\n                    <br/><br/><br/><br/><br/><br/>\r\n                    <div id=\"scroll\"></div>\r\n                    <div className=\"chatInput\">\r\n                        <form className=\"chatInputForm\" onSubmit={e => this.onSubmit(e)}  >\r\n                            <input\r\n                                className = \"form-control\"\r\n                                onChange={this.onChangeText}\r\n                                value = {this.state.text}\r\n                                type = \"text\"\r\n                                placeholder = \"Enter your message here\"\r\n                                required\r\n                            />\r\n                            <button className=\"sendButton\" type=\"submit\">Send</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"chatHide\"></div>\r\n                </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport AppBar from './navigation/appBar.component'\r\n\r\n\r\n\r\n\r\nexport default class Home extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state ={\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"HOME\"/>\r\n                \r\n              \r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Box, Flex, Text } from '@chakra-ui/core'\r\n\r\nexport default class exerciseList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            client: this.props.client,\r\n            assigned: false\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"boxList\">\r\n            <Box overflow=\"hidden\">\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                    <Text fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                        <b>{this.state.client.firstName} {this.state.client.lastName}</b>\r\n                    </Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                    <Text fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                        Workout Currently Assigned: {this.state.assigned? <span style={{color: \"green\", fontWeight: \"bold\"}}>Yes</span>: <span style={{color: \"red\", fontWeight: \"bold\"}}>No</span>}\r\n                    </Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                <Box flex='1'>\r\n                    <Text fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                        Last Workout: {this.state.assigned? <span style={{color: \"green\", fontWeight: \"bold\"}}>01/01/2000</span>: <span style={{color: \"red\", fontWeight: \"bold\"}}>01/01/2000</span>}\r\n                    </Text>\r\n                    </Box>\r\n                </Flex>\r\n\r\n                \r\n                <button type=\"button\" style={{float:\"left\"}} className=\"btn btn-primary container\" onClick={() => this.props.delete(this.props.index)}>View Details</button>\r\n                <button type=\"button\" style={{float:\"right\"}} className=\"btn btn-success container\" onClick={() => this.props.delete()}>View Schedule</button>\r\n            </Box>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component'\r\nimport ClientList from './clientList.component';\r\nimport Loader from 'react-loader-spinner'\r\nconst $ = window.$;\r\n\r\nexport default class Home extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addClient = this.addClient.bind(this);\r\n\r\n        this.state ={\r\n            clients: [],\r\n            email: \"\",\r\n            newClient: \"\",\r\n            currentUser: \"\",\r\n            showError: false,\r\n            message: \"\",\r\n            clientsLoading: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.getClients();\r\n    }\r\n\r\n    async addClient(e){\r\n        e.preventDefault();\r\n        $('#addClient').modal('hide');\r\n        this.setState({\r\n            showError: false,\r\n            showSuccess: false\r\n        })\r\n\r\n        var duplicate = false;\r\n        // Checking new client isn't already in client list\r\n        this.state.clients.forEach((client) => {\r\n            if(this.state.email === client.email){\r\n                duplicate = true;\r\n                // Display error\r\n                this.setState({\r\n                    showError: true,\r\n                    message: \"That user is already listed as your client!\",\r\n                    email: \"\"\r\n                })\r\n            }\r\n        });\r\n\r\n        // Send POST request and display relevent message to user\r\n        if(this.state.email !== this.state.currentUser.email && !duplicate){        \r\n            const email = JSON.stringify({email: this.state.email})\r\n            await fetch('/api/user/relationship', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                    },\r\n                    body: email\r\n            }).then(async res => {\r\n                await res.json().then(async log => {\r\n                    // Client has been added\r\n                    if(log.success){\r\n                        this.setState({\r\n                            showSuccess: true,\r\n                            message: \"Client has been added!\",\r\n                            email: \"\"\r\n                        })\r\n                        this.getClients();\r\n                    } else {\r\n                        // Email address could not be found\r\n                        this.setState({\r\n                            showError: true,\r\n                            message: \"Email address could not be found!\",\r\n                            email: \"\"\r\n                        })\r\n                    }\r\n                });\r\n                }).catch(error => console.log(error))\r\n        } else if (this.state.email === this.state.currentUser.email){\r\n            // User is trying to add themselves\r\n            this.setState({\r\n                showError: true,\r\n                message: \"You can't add yourself as a client!\",\r\n                email: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    async getClients(){\r\n        this.setState({clientsLoading: true});\r\n        await fetch('api/user/relationship', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n        }).then(async res => {\r\n            await res.json().then(log => {\r\n                this.setState({ \r\n                    clients: log.clients,\r\n                    currentUser: log.currentUser[0]\r\n                })\r\n            });\r\n            }).catch(error => console.log(error))\r\n        this.setState({clientsLoading: false});\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"HOME\"/>\r\n                <div className=\"alert alert-success\" role=\"alert\" style={{textAlign: \"center\",fontSize: \"24px\"}}>Welcome to CloudPT!</div>\r\n\r\n                <button type=\"button\" className=\"btn btn-primary container\" data-toggle=\"modal\" data-target=\"#addClient\">ADD CLIENT</button><br/><br/>\r\n\r\n                \r\n\r\n                { this.state.showError?\r\n                    <h6 className=\"alert alert-danger alert-dismissible\" role=\"alert\"> {this.state.message} </h6>\r\n                :   null  \r\n                }\r\n                { this.state.showSuccess?\r\n                    <h6 className=\"alert alert-info alert-dismissible\" role=\"alert\"> {this.state.message} </h6>\r\n                :   null  \r\n                }\r\n\r\n                {this.state.clientsLoading? <div style={{width: \"100px\", marginLeft: \"auto\", marginRight: \"auto\"}}><Loader type=\"ThreeDots\" color=\"rgb(53, 141, 58)\" height={100} width={100} /> </div>\r\n                :\r\n                <div>\r\n                <h2>Clients</h2>\r\n                {this.state.clients.map((client, index) => {\r\n                    return (\r\n                        <div key={index}><ClientList client={client}/></div>\r\n                        \r\n                    )\r\n                })}\r\n                </div>}\r\n\r\n                <form onSubmit={e => this.addClient(e)}>\r\n                <div className=\"container\">\r\n                    <div className=\"modal fade\" id=\"addClient\" style={{top: \"20px\"}}>\r\n                        <div className=\"modal-dialog\">\r\n                        <br/><br/><br/>\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Add a New Client</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    Enter the users email address below:\r\n                                    <input  type=\"email\" className=\"form-control\" placeholder=\"Email Address\" onChange={(e) => this.setState({email: e.target.value})} required />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Add Client</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </form><br/><br/><br/><br/>\r\n                \r\n              \r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.changePtTrue = this.changePtTrue.bind(this);\r\n        this.changePtFalse = this.changePtFalse.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            errorMessage: '',\r\n            showError: false,\r\n            ptBool: false\r\n        }\r\n    }\r\n\r\n    onChangeFirstName(e){\r\n        this.setState({\r\n            firstName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastName(e){\r\n        this.setState({\r\n            lastName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    changePtTrue() {\r\n        this.setState({\r\n            ptBool: true\r\n        });\r\n    }\r\n\r\n    changePtFalse(){\r\n        this.setState({\r\n            ptBool: false\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const registerData = JSON.stringify(this.state);\r\n\r\n        fetch('/api/register', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: registerData\r\n        }).then(res => {\r\n            res.json().then(log => {\r\n                if (log.redirect === '/') {\r\n                    window.location = '/'\r\n                } else {                  \r\n                    this.setState({errorMessage: \"Email is already in use\"});\r\n                    this.setState({showError: true})\r\n                }\r\n            });\r\n            }).catch(error => console.log(error))\r\n\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div style={{marginTop: 10}}>\r\n                <div className=\"fullscreen-bg\">\r\n                    <video autoPlay loop muted playsInline poster=\"\" className=\"fullscreen-bg__video\">\r\n                        <source src=\"/login-video.mp4\" type=\"video/mp4\"/>\r\n                    </video>\r\n                </div>\r\n\r\n                <p className=\"appTitle\">\r\n                    <img src=\"logo512.png\" alt=\"logo\" height=\"60\" width=\"60\"/>\r\n                    CloudPT\r\n                </p><br/>\r\n\r\n                <div className=\"homeBackground\">\r\n                <h3>CREATE YOUR ACCOUNT</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    \r\n                    { this.state.showError?\r\n                        <div>\r\n                        <h4 className=\"alert alert-danger alert-dismissible\" role=\"alert\"> { this.state.errorMessage } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n\r\n                    <div className=\"form-group\"> \r\n                        <input  type=\"text\"\r\n                                id=\"firstName\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"First Name\"\r\n                                value={this.state.firstName}\r\n                                onChange={this.onChangeFirstName}\r\n                                required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input  type=\"text\"\r\n                                id=\"lastName\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Last Name\"\r\n                                value={this.state.lastName}\r\n                                onChange={this.onChangeLastName}\r\n                                required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input  type=\"email\"\r\n                                id=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email Address\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeEmail}\r\n                                required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input  type=\"password\" \r\n                                id=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                required\r\n                        />\r\n                    </div>\r\n                    <h5>Do you want to register as a personal trainer?<p/>\r\n                    <div className=\"btn-group btn-group-toggle container\" data-toggle=\"buttons\">\r\n                    \r\n                        <label className=\"btn btn-light active\" >\r\n                            <input type=\"radio\" onClick={this.changePtTrue}/>Yes\r\n                        </label>\r\n                        <label className=\"btn btn-light active\" >\r\n                            <input type=\"radio\" onClick={this.changePtFalse} defaultChecked/>No\r\n                        </label>\r\n                    </div>\r\n                    </h5>\r\n                    \r\n                    <div className=\"form-group\">\r\n                    <br/>\r\n                        <input type=\"submit\" value=\"REGISTER\" className=\"btn btn-success container\" />\r\n                    </div>\r\n                </form>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                        <a href=\"/\" className=\"btn btn-primary container\">LOGIN HERE</a>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Box, Flex, Text } from '@chakra-ui/core'\r\n\r\n\r\nexport default class workoutList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"boxList\">\r\n            <Box overflow=\"hidden\">\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\"><b>{this.props.workout.workout.name}</b></Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\">Number of Excerises: <b>{this.props.workout.exercises.length}</b></Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\">Date Created: <b>{new Date(this.props.workout.workout.dateCreated).getDate()}/{new Date(this.props.workout.workout.dateCreated).getMonth() + 1}/{new Date(this.props.workout.workout.dateCreated).getFullYear()}</b></Text>\r\n                    </Box>\r\n                </Flex>\r\n                \r\n                <button style={{display: \"inline-block\", width: \"140px\"}} type=\"button\" className=\"btn btn-success container\" onClick={() => this.props.start(this.props.workout)}>Start Workout</button>\r\n            </Box>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\nimport Loader from 'react-loader-spinner';\r\nimport WorkoutList from './workoutList.component';\r\n\r\nexport default class Workout extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getWorkouts = this.getWorkouts.bind(this);\r\n        this.loadWorkouts = this.loadWorkouts.bind(this);\r\n        this.startWorkout = this.startWorkout.bind(this);\r\n\r\n        this.state = {\r\n            workoutsLoading: false,\r\n            workouts: [],\r\n            monday: [],\r\n            tuesday: [],\r\n            wednesday: [],\r\n            thursday: [],\r\n            friday: [],\r\n            saturday: [],\r\n            sunday: [],\r\n            showMessage: false,\r\n            message: \"\",\r\n            assignment: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.getWorkouts();\r\n        this.loadWorkouts();\r\n\r\n        if(this.props.location.workoutRecorded){\r\n            this.setState({\r\n                showMessage: true,\r\n                message: \"Workout has been completed, well done!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    async getWorkouts(){\r\n        this.setState({workoutsLoading: true});\r\n        await fetch('/api/workout/assigned', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n        }).then(async res => {\r\n            await res.json().then(async log => {\r\n                this.setState({\r\n                    workouts: log.workouts,\r\n                    assignment: log.assignment\r\n                })\r\n            });\r\n            }).catch(error => console.log(error))\r\n        this.setState({workoutsLoading: false});\r\n        \r\n    }\r\n\r\n    loadWorkouts(){\r\n        for (var i = 0; i< this.state.assignment.length; i++){\r\n            if(this.state.assignment[i].day === \"Monday\"){\r\n                var monday = this.state.monday;\r\n                monday.push(this.state.workouts[i])\r\n                this.setState({monday: monday})\r\n            } else if(this.state.assignment[i].day === \"Tuesday\"){\r\n                var tuesday = this.state.tuesday;\r\n                tuesday.push(this.state.workouts[i])\r\n                this.setState({tuesday: tuesday})\r\n            } else if(this.state.assignment[i].day === \"Wednesday\"){\r\n                var wednesday = this.state.wednesday;\r\n                wednesday.push(this.state.workouts[i])\r\n                this.setState({wednesday: wednesday})\r\n            } else if(this.state.assignment[i].day === \"Thursday\"){\r\n                var thursday = this.state.thursday;\r\n                thursday.push(this.state.workouts[i])\r\n                this.setState({thursday: thursday})\r\n            }  else if(this.state.assignment[i].day === \"Friday\"){\r\n                var friday = this.state.friday;\r\n                friday.push(this.state.workouts[i])\r\n                this.setState({friday: friday})\r\n            }  if(this.state.assignment[i].day === \"Saturday\"){\r\n                var saturday = this.state.saturday;\r\n                saturday.push(this.state.workouts[i])\r\n                this.setState({saturday: saturday})\r\n            } else if(this.state.assignment[i].day === \"Sunday\"){\r\n                var sunday = this.state.sunday;\r\n                sunday.push(this.state.workouts[i])\r\n                this.setState({sunday: sunday})\r\n            }\r\n        }\r\n    }\r\n\r\n    startWorkout(workout){\r\n        this.props.history.push({\r\n            pathname: '/workout/record',\r\n            workout: workout,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"WORKOUTS\"/>\r\n                \r\n                { this.state.showMessage?\r\n                    <h6 className=\"alert alert-success alert-dismissible\" role=\"alert\"> {this.state.message} </h6>\r\n                :   null  \r\n                }\r\n\r\n                \r\n                {this.state.workoutsLoading? <div style={{width: \"100px\", marginLeft: \"auto\", marginRight: \"auto\"}}><Loader type=\"ThreeDots\" color=\"rgb(53, 141, 58)\" height={100} width={100} /> </div>\r\n                : this.state.workouts.length > 0 &&\r\n                <div><div className=\"alert alert-info\" role=\"alert\" style={{textAlign: \"center\",fontSize: \"36px\"}}>Schedule</div>\r\n\r\n\r\n                    \r\n                    {this.state.monday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Monday</h4>\r\n                        {this.state.monday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                    {this.state.tuesday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Tuesday</h4>\r\n                        {this.state.tuesday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                    {this.state.wednesday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Wednesday</h4>\r\n                        {this.state.wednesday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                    {this.state.thursday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Thursday</h4>\r\n                        {this.state.thursday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                    {this.state.friday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Friday</h4>\r\n                        {this.state.friday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                    {this.state.saturday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Saturday</h4>\r\n                        {this.state.saturday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                    {this.state.sunday.length > 0 &&\r\n                    <div className=\"clientWorkoutList\"><h4>Sunday</h4>\r\n                        {this.state.sunday.map((workout, index) => {\r\n                         return (\r\n                        <div key={index}>\r\n                            <WorkoutList workout={workout} start={this.startWorkout} index={index}/>\r\n                        </div>\r\n                        )})}\r\n                    </div>}\r\n                </div>\r\n                }\r\n\r\n                {this.state.workoutsLoading? null : this.state.workouts.length < 1 &&\r\n                    <div className=\"alert alert-info\" role=\"alert\" style={{textAlign: \"center\",fontSize: \"18px\"}}> Workouts that get assigned to you will appear here! </div>\r\n                }\r\n\r\n            <br/><br/><br/><br/></Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Box, Flex, Text } from '@chakra-ui/core'\r\n\r\n\r\nexport default class workoutList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"boxList\">\r\n            <Box overflow=\"hidden\">\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\"><b>{this.props.workout.workout.name}</b></Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\">Number of Excerises: <b>{this.props.workout.exercises.length}</b></Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\">Date Created: <b>{new Date(this.props.workout.workout.dateCreated).getDate()}/{new Date(this.props.workout.workout.dateCreated).getMonth() + 1}/{new Date(this.props.workout.workout.dateCreated).getFullYear()}</b></Text>\r\n                    </Box>\r\n                </Flex>\r\n                \r\n                <button style={{float: \"left\", width: \"80px\"}} type=\"button\" className=\"btn btn-danger container\" onClick={() => this.props.delete(this.props.index)}>Delete</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button style={{display: \"inline-block\", width: \"140px\"}} type=\"button\" className=\"btn btn-success container\" onClick={() => this.props.assign(this.props.index)}>Assign Workout</button>\r\n                <button style={{float: \"right\", width: \"80px\"}} type=\"button\" className=\"btn btn-info container\" onClick={() => this.props.edit(this.props.index)}>Edit</button>\r\n            </Box>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\nimport Loader from 'react-loader-spinner';\r\nimport WorkoutList from './workoutList.component';\r\n\r\nvar selectedClients = [];\r\nexport default class Workout extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.createNewWorkout = this.createNewWorkout.bind(this);\r\n        this.getWorkouts = this.getWorkouts.bind(this);\r\n        this.deleteWorkout = this.deleteWorkout.bind(this);\r\n        this.editWorkout = this.editWorkout.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.assignWorkout = this.assignWorkout.bind(this);\r\n\r\n        this.state = {\r\n            workoutsLoading: false,\r\n            workouts: [],\r\n            allClients: [],\r\n            day: \"Monday\",\r\n            assignBttn: false,\r\n            client: \"\",\r\n            workoutSelected: \"\",\r\n            showSuccess: false,\r\n            successMsg: \"\",\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.getWorkouts();\r\n        await this.getClients();\r\n        selectedClients = [this.state.allClients.length].fill(false);\r\n    }\r\n\r\n    createNewWorkout(){\r\n        this.props.history.push({ pathname: '/workout/new', workout: \"null\"});\r\n    }\r\n\r\n    async getClients(){\r\n        await fetch('/api/user/relationship', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n        }).then(async res => {\r\n            await res.json().then(log => {\r\n                this.setState({ \r\n                    allClients: log.clients,\r\n                    currentUser: log.currentUser[0]\r\n                })\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    async getWorkouts(){\r\n        this.setState({workoutsLoading: true});\r\n        await fetch('/api/workout', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n        }).then(async res => {\r\n            await res.json().then(async log => {\r\n                this.setState({\r\n                    workouts: log.workouts\r\n                })\r\n            });\r\n            }).catch(error => console.log(error))\r\n        this.setState({workoutsLoading: false});\r\n    }\r\n\r\n\r\n    deleteWorkout(index){\r\n        let deleteWeight = window.confirm(\"Click OK if you want to delete this workout. It will also be deleted from clients schedule.\");\r\n        if (deleteWeight){\r\n            fetch('/api/workout/delete/' + this.state.workouts[index].workout._id, {\r\n                method: 'DELETE',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                    }\r\n                }\r\n            )\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    async assignWorkout(){\r\n        for(var i = 0; i < this.state.allClients.length; i++){\r\n            if(selectedClients[i] === true){\r\n                await this.setState({\r\n                    client: this.state.allClients[i],\r\n                }, async () => {\r\n                    const assignmentData = JSON.stringify(this.state);\r\n                    await fetch('/api/workout/assign', {\r\n                        method: 'POST',\r\n                        credentials: 'include',\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Access-Control-Allow-Credentials\": true\r\n                            },\r\n                        body: assignmentData\r\n                    }).then(async res => {\r\n                        await res.json().then(async log => {\r\n                            if (log.success){\r\n                                this.setState({\r\n                                    showSuccess: true,\r\n                                    successMsg: \"Workout has been assigned!\"\r\n                                })\r\n                            }\r\n                        });\r\n                        }).catch(error => console.log(error))\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    editWorkout(index){\r\n        this.props.history.push({ pathname: '/workout/new', workout: this.state.workouts[index]});\r\n    }\r\n\r\n    openModal(index){\r\n        // Setting workout name for modal title\r\n        this.setState({\r\n            workoutSelected: this.state.workouts[index].workout\r\n        })\r\n        // Open modal\r\n        window.$('#assignModal').modal();\r\n    }\r\n\r\n    checkboxChange(e){\r\n        selectedClients[e.target.value] = !selectedClients[e.target.value]\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"WORKOUTS\"/>\r\n                <button type=\"button\" className=\"btn btn-primary container\" onClick={this.createNewWorkout}>Create New Workout</button><br/>\r\n\r\n                { this.state.showSuccess?\r\n                    <h4 className=\"alert alert-success alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.successMsg } </h4>\r\n                : null\r\n                }\r\n                \r\n                {this.state.workoutsLoading? <div style={{width: \"100px\", marginLeft: \"auto\", marginRight: \"auto\"}}><Loader type=\"ThreeDots\" color=\"rgb(53, 141, 58)\" height={100} width={100} /> </div>\r\n                : this.state.workouts.length > 0 &&\r\n                <div><p className=\"h4\">Active Workouts</p>\r\n\r\n                    {this.state.workouts.map((workout, index) => {\r\n                    return (\r\n                        <div key={index}><WorkoutList workout={workout} delete={this.deleteWorkout} edit={this.editWorkout} assign={this.openModal} index={index}/></div>\r\n                    )})}</div>\r\n                }\r\n\r\n                {this.state.workoutsLoading? null : this.state.workouts.length < 1 &&\r\n                    <div className=\"alert alert-info\" role=\"alert\" style={{textAlign: \"center\",fontSize: \"18px\"}}> Start by creating a workout! </div>\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"container\">\r\n                <div className=\"modal fade\" id=\"assignModal\">\r\n                    <div className=\"modal-dialog\"><br/><br/><br/><br/><br/>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">{this.state.workoutSelected.name}</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">    \r\n\r\n                                <div className=\"btn-group btn-group-toggle container\" style={{padding:\"5px\",border:\"1px solid\", borderRadius:\"5px\", borderColor:\"lightgrey\", display: \"block\"}} data-toggle=\"buttons\">\r\n                                    <label className=\"btn btn-light daySelection active\">\r\n                                        <input type=\"radio\" value=\"Monday\" onClick={(e) => this.setState({day: e.target.value})} defaultChecked/>Monday\r\n                                    </label>\r\n                                    <label className=\"btn btn-light daySelection\">\r\n                                        <input type=\"radio\" value=\"Tuesday\" onClick={(e) => this.setState({day: e.target.value})} />Tuesday\r\n                                    </label>\r\n                                    <label className=\"btn btn-light daySelection\">\r\n                                        <input type=\"radio\" value=\"Wednesday\" onClick={(e) => this.setState({day: e.target.value})} />Wednesday\r\n                                    </label>\r\n                                    <label className=\"btn btn-light daySelection\">\r\n                                        <input type=\"radio\" value=\"Thursday\" onClick={(e) => this.setState({day: e.target.value})} />Thursday\r\n                                    </label>\r\n                                    <label className=\"btn btn-light daySelection\">\r\n                                        <input type=\"radio\" value=\"Friday\" onClick={(e) => this.setState({day: e.target.value})} />Friday\r\n                                    </label>\r\n                                    <label className=\"btn btn-light daySelection\">\r\n                                        <input type=\"radio\" value=\"Saturday\" onClick={(e) => this.setState({day: e.target.value})} />Saturday\r\n                                    </label>\r\n                                    <label className=\"btn btn-light daySelection\">\r\n                                        <input type=\"radio\" value=\"Sunday\" onClick={(e) => this.setState({day: e.target.value})} />Sunday\r\n                                    </label>\r\n\r\n                                </div><p/><p/>\r\n\r\n                                {/* List of clients to select */}\r\n                                {this.state.allClients.length?\r\n                                <div className=\"custom-control-lg custom-checkbox mb-0\">\r\n                                    <h4>Select clients</h4>\r\n                                    {this.state.allClients.map((client, index) => {\r\n                                    return (\r\n                                    <li key={index} className=\"clientList\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id={index} value={index} onChange={e => this.checkboxChange(e)}/>\r\n                                        <label className=\"custom-control-label\" htmlFor={index}>{client.firstName} {client.lastName}</label>\r\n                                    </li>\r\n                                    )})}\r\n                                </div>\r\n                                : null}   \r\n\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button disabled={this.state.assignBttn} type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.assignWorkout}>Assign Workout</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            <br/><br/><br/><br/></Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\n// eslint-disable-next-line\r\nimport {BrowseRouter as Router, Route, Link, Redirect} from 'react-router-dom'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AppBar from './navigation/appBar.component';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nvar socket = \"\";\r\nexport default class Messages extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            messages: \"\",\r\n            currentUser: \"\",\r\n            email: \"\",\r\n            getUser: \"\",\r\n            showError: false,\r\n            errorMsg: \"\",\r\n            userList: [],\r\n            userListLoaded: false,\r\n        }\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.startChat = this.startChat.bind(this);\r\n        this.loadMessages = this.loadMessages.bind(this);\r\n        if(socket === \"\"){ socket = new WebSocket(\"ws://localhost:4000/\") }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.state.userListLoaded){\r\n            await this.loadMessages();\r\n        }\r\n        \r\n\r\n        //Assign websocket to current user\r\n        if(this.state.currentUser !== \"\"){\r\n            socket.send(JSON.stringify({\r\n                messageType: \"email\",\r\n                email: this.state.currentUser[0].email \r\n            }));\r\n            \r\n            socket.onopen = (e) => {\r\n                socket.send(JSON.stringify({\r\n                    messageType: \"email\",\r\n                    email: this.state.currentUser[0].email \r\n                })); \r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        socket.onmessage = async e => {\r\n            var messageData = JSON.parse(e.data);\r\n\r\n            if(messageData.messageType === \"messageSent\"){\r\n                this.resetStates();\r\n                this.loadMessages();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            userListLoaded: false\r\n        })\r\n    }\r\n\r\n    async loadMessages(){\r\n        this.resetStates();\r\n        // Get all messages\r\n        await this.getMessages();\r\n        // Get all users\r\n        await this.getAllUsers();\r\n        // Create array of lists for all users in allUsers list\r\n        this.createMessageLists();\r\n        // Show list when messages have been fetched\r\n        this.setState({\r\n            userListLoaded: true\r\n        });\r\n    }\r\n\r\n    resetStates(){\r\n        this.setState({\r\n            messages: \"\",\r\n            currentUser: \"\",\r\n            email: \"\",\r\n            getUser: \"\",\r\n            showError: false,\r\n            errorMsg: \"\",\r\n            userList:[],\r\n            userListLoaded: false,\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    async getAllUsers(){\r\n        if(this.state.currentUser !== \"\" && this.state.messages !== \"\"){\r\n            for (var i = 0; i < this.state.messages.length; i++){\r\n                var inList = false;\r\n                \r\n                for(var j = 0; j < this.state.userList.length; j++){\r\n                    if(this.state.userList[j].email === this.state.messages[i].userTo || this.state.userList[j].email === this.state.messages[i].userFrom){\r\n                        inList = true;\r\n                    }\r\n                }\r\n                \r\n                if (!inList){\r\n                    if(this.state.messages[i].userTo !== this.state.currentUser[0].email){\r\n                        await this.getUser(this.state.messages[i].userTo)\r\n                        if(this.state.getUser !== null){\r\n                            this.state.userList.push(this.state.getUser)\r\n                        }\r\n                        \r\n                    } else {\r\n                        await this.getUser(this.state.messages[i].userFrom)\r\n                        if(this.state.getUser !== null){\r\n                            this.state.userList.push(this.state.getUser)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    createMessageLists(){\r\n        for (var i = 0; i < this.state.userList.length; i++){\r\n            var newUserList = this.state.userList;\r\n            newUserList[i] = [newUserList[i], []]\r\n            this.setState({\r\n                userList: newUserList\r\n            })\r\n            for(var j = 0; j < this.state.messages.length; j++){\r\n                if (this.state.messages[j].userTo === this.state.userList[i][0].email || this.state.messages[j].userFrom === this.state.userList[i][0].email){\r\n                    var newUserList2 = this.state.userList;\r\n                    newUserList2[i][1].push(this.state.messages[j])\r\n                    this.setState({\r\n                        userList: newUserList2\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        this.state.userList.sort((a, b) => new Date((b[1])[b[1].length - 1].date) - new Date((a[1])[a[1].length - 1].date))\r\n    }\r\n\r\n    async startChat(e){\r\n        e.preventDefault();\r\n        \r\n        // Get user for new chat and make sure user exists\r\n        await this.getUser(this.state.email)\r\n        if(this.state.getUser.email != null){\r\n            if(this.state.getUser.email !== this.state.currentUser[0].email){\r\n                if (this.state.userList.length === 0){\r\n                    // Start new chat\r\n                    this.props.history.push({\r\n                        pathname: '/chat',\r\n                        messages: [], \r\n                        userTo: this.state.getUser,\r\n                        currentUser: this.state.currentUser,\r\n                        socket: socket\r\n                    });\r\n                }\r\n                for (var i = 0; i < this.state.userList.length; i++){\r\n                    if (this.state.userList[i][0].email === this.state.email){\r\n                        // Open already existing chat window\r\n                        this.props.history.push({\r\n                            pathname: '/chat',\r\n                            messages: this.state.userList[i][1], \r\n                            userTo: this.state.userList[i][0],\r\n                            currentUser: this.state.currentUser,\r\n                            socket: socket\r\n                        });\r\n                    } else {\r\n                        // Start new chat\r\n                        this.props.history.push({\r\n                            pathname: '/chat',\r\n                            messages: [], \r\n                            userTo: this.state.getUser,\r\n                            currentUser: this.state.currentUser,\r\n                            socket: socket\r\n                        });\r\n                    }\r\n                }\r\n            // Show error if attempting to start conversation with yourself\r\n            } else {\r\n                this.setState({\r\n                    showError: true,\r\n                    errorMsg: \"You can't start a chat with yourself!\",\r\n                    email: \"\"\r\n                })\r\n            }\r\n        // If user does not exist show error\r\n        } else {\r\n            this.setState({\r\n                showError: true,\r\n                errorMsg: \"There is no user with that email address!\",\r\n                email: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    async getUser(userEmail){\r\n        // Checking user exists\r\n        const email = JSON.stringify({email: userEmail})\r\n        this.setState({\r\n            getUser: null\r\n        })\r\n        await fetch('/api/user', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n              body: email\r\n        }).then(async res => {\r\n            await res.json().then(async log => {\r\n                if(log.user != null){\r\n                    this.setState({\r\n                        getUser: log.user\r\n                    })\r\n                }\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    async getMessages(){\r\n        await fetch('/api/messages', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              }\r\n        }).then(async res => {\r\n            await res.json().then(log => {\r\n                this.setState({\r\n                    messages: log.messages,\r\n                    currentUser: log.currentUser\r\n                })\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    captitaliseFirstLetter(string){\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"MESSAGES\"/>\r\n\r\n                { this.state.showError?\r\n                    <h6 className=\"alert alert-danger alert-dismissible\" role=\"alert\"> {this.state.errorMsg} </h6>\r\n                :   null  \r\n                }\r\n\r\n                <button type=\"button\" className=\"btn btn-primary container\" data-toggle=\"modal\" data-target=\"#newChatModal\">Start New Chat</button>\r\n\r\n                <List>\r\n                    {this.state.userListLoaded?  this.state.userList.map((users, index) => {\r\n                        return (\r\n                            <ListItem key={index} style={(index + 1) % 2? {background: \"#e3e3e3\", borderRadius:\"10px\"}:{background: \"white\", borderRadius:\"10px\"}}>\r\n                                \r\n                                <ListItemIcon>\r\n                                    <FaceIcon/>\r\n                                </ListItemIcon>\r\n                                <Link to={{pathname: '/chat', messages: users[1], userTo: users[0], currentUser: this.state.currentUser, socket: socket}}>\r\n\r\n                                {!(users[1])[users[1].length - 1].read && (users[1])[users[1].length - 1].userTo === this.state.currentUser[0].email ? \r\n                                <ListItemText style={{textShadow: \"0px 0px 1px #333\"}} primary={this.captitaliseFirstLetter(users[0].firstName) + \" \" + this.captitaliseFirstLetter(users[0].lastName)} secondary={(users[1])[users[1].length - 1].text}/>\r\n                                : <ListItemText primary={this.captitaliseFirstLetter(users[0].firstName) + \" \" + this.captitaliseFirstLetter(users[0].lastName)} secondary={(users[1])[users[1].length - 1].text}/>}\r\n                                \r\n                                </Link>         \r\n                            </ListItem>\r\n                        )\r\n                        }) : \r\n                        <div style={{width: \"100px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n                            <Loader type=\"ThreeDots\" color=\"rgb(53, 141, 58)\" height={100} width={100} />\r\n                        </div>}\r\n                </List>\r\n\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"modal fade\" id=\"newChatModal\" style={{top: \"20px\"}}>\r\n                        <div className=\"modal-dialog\">\r\n                        <br/><br/><br/>\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Start New Chat</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    Enter the users email address below:\r\n                                    <input  type=\"email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Email Address\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChangeEmail}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\"  data-dismiss=\"modal\" onClick={this.startChat}>Start Chat</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '../navigation/appBar.component'\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nexport default class Account extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.listClick = this.listClick.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        fetch('/api/logout', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                  }\r\n                }\r\n            ).then(function(res) {\r\n                res.json().then(log => {\r\n                    if (log.logout === true) {\r\n                        window.location = '/'\r\n                    }\r\n                });\r\n                }).catch(error => console.log(error))\r\n    }\r\n\r\n    listClick(url){\r\n        this.props.history.push({pathname: url})\r\n    }\r\n    \r\n\r\n    \r\n    \r\n    render() {\r\n        const classes = this.props;\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"ACCOUNT\"/>\r\n\r\n                <div className={classes.root}>\r\n                    <List component=\"nav\" aria-label=\"list\">\r\n                        <ListItem onClick={() => this.listClick(\"/account/body\")}>\r\n                        <ListItemIcon>\r\n                            <AccessibilityIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Update Weight and Height\" />\r\n                        </ListItem>\r\n\r\n                        <Divider />\r\n\r\n                        <ListItem onClick={() => this.listClick(\"/account/role\")}>\r\n                        <ListItemIcon>\r\n                            <PeopleIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Change User Role\" />\r\n                        </ListItem>\r\n\r\n                        <ListItem onClick={() => this.listClick(\"/account/update\")}>\r\n                        <ListItemIcon>\r\n                            <PersonIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Update Account Details\" />\r\n                        </ListItem>\r\n\r\n                        <ListItem onClick={() => this.listClick(\"/account/password\")}>\r\n                        <ListItemIcon>\r\n                            <LockIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Change Password\" />\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </List>\r\n\r\n                    <div className=\"form-group\">\r\n                            <input type=\"button\" value=\"Logout\" className=\"btn btn-danger container\" onClick={this.logout} />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport { useHistory } from 'react-router-dom'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      left: 0,\r\n      zIndex: 100,\r\n      height: \"75px\",\r\n      borderTop: \"1px solid #c7c7c7\",\r\n      overflow: \"hidden\",     \r\n    },\r\n  });\r\n  \r\n  export default function LabelBottomNavigation() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(window.location.pathname.substr(1,));\r\n    const history = useHistory();\r\n  \r\n    const handleChange = (event, newValue) => {\r\n        history.push(`/${newValue}`);\r\n        setValue(newValue)\r\n    };\r\n  \r\n    return (\r\n      <BottomNavigation value={value} onChange={handleChange}  className={classes.root}>\r\n        <BottomNavigationAction disableTouchRipple={true} label=\"Home\" value=\"home\"  icon={<HomeIcon />} />\r\n        <BottomNavigationAction disableTouchRipple={true} label=\"Workouts\" value=\"workout\"  icon={<FitnessCenterIcon />}/>\r\n        <BottomNavigationAction disableTouchRipple={true} label=\"Messages\" value=\"messages\"  icon={<ChatIcon />} />\r\n        <BottomNavigationAction disableTouchRipple={true} label=\"Account\" value=\"account\" icon={<PersonIcon />} />\r\n      </BottomNavigation>\r\n    );\r\n  }","import React, { Component } from 'react';\r\nimport { Box, Flex, Text } from '@chakra-ui/core'\r\nimport linkifyHtml from 'linkifyjs/html';\r\nimport Exercise from '../../data/exercises';\r\n\r\nvar name, notes = false;\r\nexport default class exerciseList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getExerciseData = this.getExerciseData.bind(this);\r\n\r\n        this.state = {\r\n            exerciseData: this.props.exercise,\r\n            exerciseType: [\"Cardio\", \"Stretching\", \"Body Weight\", \"Barbell\", \"Dumbbell\"],\r\n        }\r\n        this.getExerciseData()\r\n    }\r\n\r\n    getExerciseData(){\r\n        // Checking if a custom exercise name was used or a pre-selected one\r\n        if(this.state.exerciseData.customName !== \"\"){\r\n            name = this.state.exerciseData.customName\r\n        } else if(this.state.exerciseData.exerciseTypeValue === \"0\") {\r\n            name = (Exercise[this.state.exerciseData.exerciseTypeValue])[this.state.exerciseData.exerciseValue]\r\n        } else {\r\n            name = (Exercise[parseInt(this.state.exerciseData.bodyPartValue) + 1][parseInt(this.state.exerciseData.exerciseTypeValue) - 1])[this.state.exerciseData.exerciseValue]\r\n        }\r\n\r\n        // Checking for any links in the notes and making them clickable\r\n        notes = (linkifyHtml(this.state.exerciseData.notes, {defaultProtocol: 'https'}));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"boxList\">\r\n            <Box overflow=\"hidden\">\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\"><b>Type: </b>{this.state.exerciseType[this.props.exercise.exerciseTypeValue]}</Text>\r\n                    </Box>\r\n                    <Box flex='1'>\r\n                        <Text textAlign='right' fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                            {this.state.exerciseData.distance? <span>Distance: {this.state.exerciseData.distance} Miles</span>:null}\r\n                            {this.state.exerciseData.minutes? <span>Duration: {this.state.exerciseData.minutes} Min {this.state.exerciseData.seconds} Sec</span>:null}\r\n                            {this.state.exerciseData.weight? <span><b>Weight: </b>{this.state.exerciseData.weight} KG</span>:null}\r\n                        </Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                    <Text fontFamily=\"Arial, Helvetica, sans-serif\"><b>Exercise: </b>{name}</Text>\r\n                    </Box>\r\n                    <Box flex='1'>\r\n                    <Text textAlign='right' fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                        {this.state.exerciseData.sets? <span><b>Sets: </b>{this.state.exerciseData.sets} <span><b>Reps: </b>{this.state.exerciseData.repetitions}</span></span>:null}\r\n                    </Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontWeight='bold' margin=\"0\" fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                            {this.state.exerciseData.notes? <span>Notes:</span>:null}\r\n                        </Text>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\" dangerouslySetInnerHTML={{__html: notes}}/>\r\n                    </Box>\r\n                </Flex>\r\n\r\n                \r\n                <button type=\"button\" className=\"btn btn-danger container\" style={{float: \"left\"}} onClick={() => this.props.delete(this.props.index)}>Delete</button>\r\n            </Box>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Box, Flex, Text } from '@chakra-ui/core'\r\nimport linkifyHtml from 'linkifyjs/html';\r\nimport Exercise from '../../data/exercises';\r\n\r\nvar name, notes = false;\r\nexport default class exerciseList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getExerciseData = this.getExerciseData.bind(this);\r\n        this.complete = this.complete.bind(this);\r\n        this.missed = this.missed.bind(this);\r\n\r\n        this.state = {\r\n            exerciseData: this.props.exercise,\r\n            exerciseType: [\"Cardio\", \"Stretching\", \"Body Weight\", \"Barbell\", \"Dumbbell\"],\r\n        }\r\n\r\n        this.getExerciseData()\r\n    }\r\n\r\n    getExerciseData(){\r\n        // // Checking if a custom exercise name was used or a pre-selected one\r\n        if(this.state.exerciseData.customName !== \"\"){\r\n            name = this.state.exerciseData.customName\r\n        } else if(this.state.exerciseData.exerciseTypeValue === \"0\") {\r\n            name = (Exercise[this.state.exerciseData.exerciseTypeValue])[this.state.exerciseData.exerciseValue]\r\n        } else {\r\n            name = (Exercise[parseInt(this.state.exerciseData.bodyPartValue) + 1][parseInt(this.state.exerciseData.exerciseTypeValue) - 1])[this.state.exerciseData.exerciseValue]\r\n        }\r\n\r\n        // Checking for any links in the notes and making them clickable\r\n        notes = (linkifyHtml(this.state.exerciseData.notes, {defaultProtocol: 'https'}));\r\n    }\r\n\r\n    complete(){\r\n        document.getElementById(\"list\" + this.props.index).style.backgroundColor = \"rgba(0, 230, 11, 0.37)\";\r\n        document.getElementById(\"list\" + this.props.index).style.borderColor = \"white\";\r\n        this.props.complete(this.props.index);\r\n    }\r\n\r\n    missed(){\r\n        document.getElementById(\"list\" + this.props.index).style.backgroundColor = \"rgba(230, 0, 0, 0.37)\";\r\n        document.getElementById(\"list\" + this.props.index).style.borderColor = \"white\";\r\n        this.props.missed(this.props.index);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id={\"list\" + this.props.index} className=\"boxList\">\r\n            <Box overflow=\"hidden\">\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\"><b>Type: </b>{this.state.exerciseType[this.props.exercise.exerciseTypeValue]}</Text>\r\n                    </Box>\r\n                    <Box flex='1'>\r\n                        <Text textAlign='right' fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                            {this.state.exerciseData.distance? <span>Distance: {this.state.exerciseData.distance} Miles</span>:null}\r\n                            {this.state.exerciseData.minutes? <span>Duration: {this.state.exerciseData.minutes} Min {this.state.exerciseData.seconds} Sec</span>:null}\r\n                            {this.state.exerciseData.weight? <span><b>Weight: </b>{this.state.exerciseData.weight} KG</span>:null}\r\n                        </Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                    <Text fontFamily=\"Arial, Helvetica, sans-serif\"><b>Exercise: </b>{name}</Text>\r\n                    </Box>\r\n                    <Box flex='1'>\r\n                    <Text textAlign='right' fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                        {this.state.exerciseData.sets? <span><b>Sets: </b>{this.state.exerciseData.sets} <span><b>Reps: </b>{this.state.exerciseData.repetitions}</span></span>:null}\r\n                    </Text>\r\n                    </Box>\r\n                </Flex>\r\n                <Flex flexDirection='row'>\r\n                    <Box flex='1'>\r\n                        <Text fontWeight='bold' margin=\"0\" fontFamily=\"Arial, Helvetica, sans-serif\">\r\n                            {this.state.exerciseData.notes? <span>Notes:</span>:null}\r\n                        </Text>\r\n                        <Text fontFamily=\"Arial, Helvetica, sans-serif\" dangerouslySetInnerHTML={{__html: notes}}/>\r\n                    </Box>\r\n                </Flex>\r\n\r\n                \r\n                <button type=\"button\" className=\"btn btn-success container\" style={{float: \"left\"}} onClick={this.complete}>Completed</button>\r\n                <button type=\"button\" className=\"btn btn-danger container\" style={{float: \"right\"}} onClick={this.missed}>Missed</button>\r\n            </Box>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nvar state = \"\";         // Stores state of graph\r\nvar weightStack = [];   // Stores all the weights\r\nvar dateStack = [];     // Stores all the dates\r\nexport default class weightGraph extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Clearing values\r\n        state = \"\";\r\n        weightStack = [];\r\n        dateStack = [];\r\n        \r\n        // Creating stack with all the users weights\r\n        this.props.weights.forEach(weight => {\r\n            weightStack.push(weight.weight)\r\n        });\r\n\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        // Creating a stack with all the users dates that the weights were recorded\r\n        this.props.weights.forEach(weight => {\r\n            const d = new Date(weight.date);\r\n            dateStack.push(d.getDate() + \" \" + monthNames[d.getMonth()])\r\n        });\r\n\r\n        this.createGraph();\r\n    }\r\n\r\n    // Creates state of the graph\r\n    createGraph(){\r\n        state = {\r\n            labels: dateStack.reverse(),\r\n            datasets: [\r\n              {\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,1)',\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                borderWidth:2,\r\n                data: weightStack.reverse()\r\n              }\r\n            ]\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Line\r\n                    data={state}\r\n                    options={{\r\n                        title:{\r\n                            display:true,\r\n                            text:'Weight',\r\n                            fontSize:20\r\n                        },\r\n                        legend:{\r\n                            display: false\r\n                        }\r\n                    }}\r\n                    height={300}\r\n                />\r\n          </div>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport SlideRuler from 'slide-ruler';\r\nimport { List, ListItem, ListItemText, IconButton, ListItemSecondaryAction } from '@material-ui/core';\r\nimport AppBar from '../navigation/appBar.component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport WeightGraph from '../weightGraph.component';\r\n\r\nexport default class Weight extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            weight: 60,\r\n            height: 150,\r\n            userHeight: false,\r\n            date: new Date(),\r\n            allWeights: []\r\n        };\r\n        this.handleValueWeight = this.handleValueWeight.bind(this);\r\n        this.handleValueHeight = this.handleValueHeight.bind(this);\r\n        this.renderSlideRulerWeight = this.renderSlideRulerWeight.bind(this);\r\n        this.renderSlideRulerHeight = this.renderSlideRulerHeight.bind(this);\r\n        this.addWeight = this.addWeight.bind(this);\r\n        this.getWeight = this.getWeight.bind(this);\r\n        this.deleteWeight = this.deleteWeight.bind(this);\r\n        this.updateHeight = this.updateHeight.bind(this);\r\n        this.getHeight = this.getHeight.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getWeight();\r\n        this.getHeight();\r\n        this.renderSlideRulerWeight();\r\n        this.renderSlideRulerHeight();\r\n    }\r\n\r\n    handleValueWeight(value){\r\n    this.setState({weight: value});\r\n    }\r\n    handleValueHeight(value){\r\n    this.setState({height: value});\r\n    }\r\n\r\n    renderSlideRulerWeight(){\r\n        return new SlideRuler({\r\n            el: this.refs.slideRulerWeight,\r\n            maxValue: 250,\r\n            minValue: 30,\r\n            currentValue: 80,\r\n            handleValue: this.handleValueWeight,\r\n            precision: 0.1,\r\n            fontColor: \"#FFFFFF\"\r\n        });\r\n    }\r\n\r\n    renderSlideRulerHeight(){\r\n        return new SlideRuler({\r\n            el: this.refs.slideRulerHeight,\r\n            maxValue: 250,\r\n            minValue: 30,\r\n            currentValue: 150,\r\n            handleValue: this.handleValueHeight,\r\n            precision: 0.5,\r\n            fontColor: \"#FFFFFF\"\r\n        });\r\n    }\r\n    \r\n    getWeight(e){\r\n        fetch('/api/weight/', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              }\r\n            }\r\n        ).then(res => {\r\n            res.json().then(async log => {\r\n                // Sort weights into date order\r\n                this.setState({allWeights: log.weights.sort((a, b) => new Date(b.date) - new Date(a.date))})\r\n            });\r\n        }).catch(error => console.log(error))\r\n    }\r\n    \r\n    addWeight(e){\r\n        const weightData = JSON.stringify(this.state)\r\n        fetch('/api/weight/', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n            body: weightData\r\n            }\r\n        )\r\n        window.location.reload();\r\n      }\r\n\r\n      deleteWeight(weightData){\r\n        let deleteWeight = window.confirm(\"Click OK if you want to delete this weight input\");\r\n        if (deleteWeight){\r\n            fetch('/api/weight/' + weightData._id, {\r\n                method: 'DELETE',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                  }\r\n                }\r\n            )\r\n            window.location.reload();\r\n        }\r\n        \r\n      }\r\n\r\n      updateHeight(e){\r\n        const heightData = JSON.stringify(this.state)\r\n        fetch('/api/height/', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              },\r\n            body: heightData\r\n            }\r\n        )\r\n        window.location.reload();\r\n      }\r\n\r\n      getHeight(){\r\n        fetch('/api/height/', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              }\r\n            }\r\n        ).then(res => {\r\n            res.json().then(async log => {\r\n                this.setState({userHeight: log.height})\r\n            });\r\n            }).catch(error => console.log(error))\r\n      }\r\n\r\n      \r\n    render() {\r\n        return (\r\n            \r\n       \r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"HEIGHT & WEIGHT\" back=\"/account\"/>\r\n                \r\n            \r\n            \r\n                {this.state.userHeight?\r\n                <h4><div style={{textAlign: \"center\"}}>Current Height</div>  <p style={{textAlign: \"center\"}}><b>{this.state.userHeight} cm</b></p></h4>\r\n                : null }\r\n                <button type=\"button\" className=\"btn btn-primary container\" data-toggle=\"modal\" data-target=\"#heightModal\">Update Height</button><br/><br/>\r\n\r\n\r\n                {this.state.allWeights.length > 0 &&\r\n                <h4><div style={{textAlign: \"center\"}}>Current Weight</div>  <p style={{textAlign: \"center\"}}><b>{this.state.allWeights[0].weight} kg</b></p></h4>\r\n                }\r\n                \r\n                <button type=\"button\" className=\"btn btn-primary container\" data-toggle=\"modal\" data-target=\"#weightModal\">Update Weight</button>\r\n                \r\n                {this.state.allWeights.length > 0 &&\r\n                    <div><WeightGraph weights={this.state.allWeights} /></div>\r\n                \r\n                }\r\n                \r\n\r\n                {this.state.allWeights.length > 0 && \r\n                <List className=\"weightList\">\r\n                        {this.state.allWeights && this.state.allWeights.map((weightsData, index) => {\r\n                            return (\r\n                                <div  key={index}>\r\n                                    <ListItem>\r\n                                        <ListItemText>{weightsData.weight}kg <div style={{float: \"right\"}}>{new Date(weightsData.date).getDate()}/{new Date(weightsData.date).getMonth() + 1}/{new Date(weightsData.date).getFullYear()}</div></ListItemText>\r\n                                        <ListItemSecondaryAction onClick={() => this.deleteWeight(weightsData)}>\r\n                                            <IconButton edge=\"end\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                        \r\n                                    </ListItem>\r\n                                    {index !== this.state.allWeights.length - 1 &&\r\n                                        <Divider/>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                            })}\r\n                </List>\r\n                }\r\n                \r\n                <div className=\"container\">\r\n                <div className=\"modal fade\" id=\"weightModal\">\r\n                    <div className=\"modal-dialog\"><br/><br/><br/><br/><br/>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Weight Input</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <p className=\"modal-info\">{this.state.weight} KG</p>\r\n                                <div style={{textAlign: \"center\", fontSize: \"24px\", fontWeight: \"bold\"}}>^</div>\r\n                                <div ref='slideRulerWeight' className=\"ruler\"></div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.addWeight}>Add Weight</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"container\">          \r\n                <div className=\"modal fade container\" id=\"heightModal\">\r\n                    <div className=\"modal-dialog\"><br/><br/><br/><br/><br/>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 className=\"modal-title\">Height Input</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <p className=\"modal-info\">{this.state.height} CM</p>\r\n                                <div style={{textAlign: \"center\", fontSize: \"24px\", fontWeight: \"bold\"}}>^</div>\r\n                                <div ref='slideRulerHeight' className=\"ruler\"></div>\r\n                                \r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.updateHeight}>Update Height</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <br/><br/><br/><br/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","const exercise = [\r\n    //Cardio\r\n    [\"Custom\", \"Treadmill\", \"Cross-Trainer\", \"Bike\", \"Rowing Machine\", \"Stair Climb\",],\r\n    // Legs\r\n    [\r\n        // Streching\r\n        [\"Custom\", \"Quad Strech\", \"Hamstring Stretch\", \"Calf Stretch\"],\r\n        // Body Weight\r\n        [\"Custom\", \"Squat\", \"Squat Jump\", \"Lunge\", \"Box Squats\", \"Wall Sit\"],\r\n        // Barbell\r\n        [\"Custom\", \"Squat\", \"Front Squat\", \"Romanian Deadlift\", \"Lunges\", \"Good Mornings\", \"Calf Raises\", \"Glute Bridge\"],\r\n        // Dumbbell\r\n        [\"Custom\", \"Goblet Squat\", \"Bulgarian Squat\", \"Romanian Deadlift\", \"Lunges\"]\r\n    ],\r\n    // Back\r\n    [\r\n        // Streching\r\n        [\"Custom\", \"Childs Pose\", \"Knee-to-Chest\", \"Seated Spinal Twist\", \"Cat and Cow Stretch\"],\r\n        // Body Weight\r\n        [\"Custom\", \"Pullups\", \"Chin Ups\", \"Inverted Rows\"],\r\n        // Barbell\r\n        [\"Custom\", \"Deadlift\", \"Bent Over Rows\", \"Stiff Leg Deadlift\", \"Rack Pulls\", \"Shrugs\"],\r\n        // Dumbbell\r\n        [\"Custom\", \"Bent Over Rows\", \"Kneeling One Arm Row\", \"Deadlift\", \"Back Fly\"]\r\n    ],\r\n    // Shoulders\r\n    [\r\n        // Streching\r\n        [\"Custom\", \"Childs Pose\", \"Arm Circles\", \"Arm Cross-Body\", \"Downward Dog\"],\r\n        // Body Weight\r\n        [\"Custom\", \"Pike Pushups\", \"Push-Back Pushups\"],\r\n        // Barbell\r\n        [\"Custom\", \"Shoulder Press\", \"Upright Row\", \"Seated Shoulder Press\"],\r\n        // Dumbbell\r\n        [\"Custom\", \"Shoudler Press\", \"Arnold Press\", \"Lateral Raise\", \"Reverse Flys\"]\r\n    ],\r\n    // Chest\r\n    [\r\n        // Streching\r\n        [\"Custom\", \"Bent Arm Against Wall\", \"Hands on Head\"],\r\n        // Body Weight\r\n        [\"Custom\", \"Pushups\", \"Diamond Pushups\", \"Wide Pushups\", \"Incline Pushups\", \"Decline Pushups\"],\r\n        // Barbell\r\n        [\"Custom\", \"Bench Press\", \"Incline Bench Press\", \"Decline Bench Press\", \"Close-Grip Bench Press\"],\r\n        // Dumbbell\r\n        [\"Custom\", \"Bench Press\", \"Incline Bench Press\", \"Decline Bench Press\", \"Lying Flys\", \"Incline Flys\"]\r\n    ],\r\n    // Arms\r\n    [\r\n        // Streching\r\n        [\"Custom\", \"Overhead Tricep\", \"Arm Cross-Body\", \"Wrist Extension\", \"Childs Pose\"],\r\n        // Body Weight\r\n        [\"Custom\", \"Tricep Dips\", \"Shoulder Taps\", \"Walking Pushups\", \"Diamond Pushups\"],\r\n        // Barbell\r\n        [\"Custom\", \"Curls\", \"Skull Crushes\", \"Reverse Curls\"],\r\n        // Dumbbell\r\n        [\"Custom\", \"Curls\", \"Hammer Curls\", \"Overhead Extensions\", \"Bent-Over Tricep Extensions\" ]\r\n    ],\r\n    // Abs\r\n    [\r\n        // Streching\r\n        [\"Custom\", \"Snake Strech\", \"Childs Pose\", \"Cat and Cow Stretch\"],\r\n        // Body Weight\r\n        [\"Custom\", \"Crunch\", \"Russian Twists\", \"Plank\", \"Side-Plank\", \"Leg Raises\", \"bicycles\", \"Side Oblique Crunch\"],\r\n        // Barbell\r\n        [\"Custom\", \"Barbell Rollout\", \"Zercher Squat\", \"Lunge\"],\r\n        // Dumbbell\r\n        [\"Custom\", \"Side Bends\", \"Crunch\", \"Russian Twists\"]\r\n    ],\r\n]\r\n\r\nexport default exercise;","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\nimport ExerciseList from './exerciseList.component';\r\nimport Exercise from '../../data/exercises'; // Importing list of exercises array\r\nconst $ = window.$;\r\n\r\nvar savedExercises = [];\r\nexport default class Workout extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addExercise = this.addExercise.bind(this);\r\n        this.deleteExercise = this.deleteExercise.bind(this);\r\n\r\n        this.state = {\r\n            exerciseType: [\"Cardio\", \"Stretching\", \"Body Weight\", \"Barbell\", \"Dumbbell\"],\r\n            exerciseTypeValue: -1,\r\n            bodyParts: [\"Legs\", \"Back\", \"Shoulders\", \"Chest\", \"Arms\", \"Abs\"],\r\n            bodyPartValue: -1,\r\n            showExerciseList: false,\r\n            showBodyPart: false,\r\n            exerciseValue: -1,\r\n            showCardioOptions: false,\r\n            disableBttn: true,\r\n            showTime: false,\r\n            showDistance: false,\r\n            showNotes: false,\r\n            customName: \"\",\r\n            minutes: \"\",\r\n            seconds: \"\",\r\n            distance: \"\",\r\n            weight: \"\",\r\n            sets: \"\",\r\n            repetitions: \"\",\r\n            notes: \"\",\r\n            showExercises: true,\r\n            workoutName: \"\",\r\n            workoutID: \"\", \r\n        }\r\n        if(typeof this.props.location.workout === \"undefined\"){\r\n            window.location = \"/workout\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.workout !== \"null\"){\r\n            savedExercises = this.props.location.workout.exercises\r\n            this.setState({\r\n                workoutName: this.props.location.workout.workout.name,\r\n                workoutID: this.props.location.workout.workout._id\r\n            })\r\n        } else {\r\n            savedExercises = [];\r\n            this.setState({showExercises: false})\r\n            this.setState({showExercises: false})\r\n        }\r\n\r\n    }\r\n\r\n    exerciseTypeChange(e){\r\n        // Hiding other options if exercise type is changed\r\n        this.setState({\r\n            showBodyPart: false,\r\n            showExerciseList: false,\r\n            showCardioOptions: false,\r\n            showTime: false,\r\n            showDistance: false,\r\n            showWeight: false,\r\n            showSets: false,\r\n            showNotes: false\r\n        })\r\n        this.setState({exerciseTypeValue: e.target.value}); \r\n        \r\n        // If exercise type is cardio - don't ask for a body part\r\n        if (e.target.value === \"0\"){\r\n            this.setState({showExerciseList: true})\r\n        } else if (e.target.value > 0){\r\n            this.setState({showBodyPart: true})\r\n        }\r\n    }\r\n\r\n    exerciseChange(e){\r\n        // Hiding other options if exercise is changed\r\n        this.setState({\r\n            exerciseValue: e.target.value,\r\n            showCardioOptions: false,\r\n            showTime: false,\r\n            showDistance: false,\r\n            showWeight: false,\r\n            showSets: false,\r\n            showNotes: false\r\n        })\r\n\r\n        // Exercise is cardio - show time/distance\r\n        if(this.state.exerciseTypeValue === \"0\"){\r\n            this.setState({\r\n                showCardioOptions: true,\r\n                showTime: true\r\n            })\r\n        // Exercise is stretching - show time\r\n        } else if (this.state.exerciseTypeValue === \"1\") {\r\n            this.setState({showTime: true})\r\n        // Exercise is bodyweight - show reps and sets\r\n        } else if (this.state.exerciseTypeValue === \"2\"){\r\n            this.setState({showSets: true})\r\n        // Exercise is weighted - show reps, sets and weight\r\n        } else {\r\n            this.setState({\r\n                showSets: true,\r\n                showWeight: true,\r\n            })\r\n        }\r\n\r\n        // Showing notes and enabling add button\r\n        this.setState({\r\n            showNotes: true,\r\n            disableBttn: false\r\n        })\r\n    }\r\n\r\n\r\n    loadExercises(){\r\n        if(this.state.showBodyPart){\r\n            // Showing correct exercises based on selected options - if a body part has been selected\r\n            return Exercise[parseInt(this.state.bodyPartValue) + 1][parseInt(this.state.exerciseTypeValue) - 1].map((exercise, index) => <option value={index} key={index}>{exercise}</option>)\r\n        } else {\r\n            // Showing correct exercises based on selected options - if cardio has been selected\r\n            return Exercise[this.state.exerciseTypeValue].map((exercise, index) => <option value={index} key={index}>{exercise}</option>)\r\n        }\r\n    }\r\n\r\n    addExercise(e){\r\n        e.preventDefault();\r\n\r\n        // Pushing created exercise onto stack\r\n        savedExercises.push(this.state);\r\n\r\n        // Hiding modal and reseting values\r\n        $('#addExercise').modal('hide');\r\n        $(\"#exerciseType\").val('hidden');\r\n\r\n        // Resetting states\r\n        this.setState({\r\n            exerciseTypeValue: -1,\r\n            bodyPartValue: -1,\r\n            showExerciseList: false,\r\n            showBodyPart: false,\r\n            exerciseValue: -1,\r\n            showCardioOptions: false,\r\n            disableBttn: true,\r\n            showTime: false,\r\n            showDistance: false,\r\n            showNotes: false,\r\n            showSets: false,\r\n            showWeight: false,\r\n            customName: \"\",\r\n            minutes: \"\",\r\n            seconds: \"\",\r\n            distance: \"\",\r\n            weight: \"\",\r\n            sets: \"\",\r\n            repetitions: \"\",\r\n            notes: \"\",\r\n            showExercises: false\r\n        })\r\n        this.setState({showExercises: true})\r\n    }\r\n\r\n    deleteExercise(index){\r\n        const filteredItems = savedExercises.slice(0, index).concat(savedExercises.slice(index + 1, savedExercises.length))\r\n        savedExercises = filteredItems\r\n        this.setState({showExercises: false});\r\n        this.setState({showExercises: true});\r\n    }\r\n\r\n    async saveWorkout(e){\r\n        e.preventDefault();\r\n        savedExercises[0].workoutName = this.state.workoutName;\r\n\r\n        const workoutData = JSON.stringify(savedExercises)\r\n        var newWorkoutID;\r\n        await fetch('/api/workout/new', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n            },\r\n            body: workoutData\r\n        }).then(async res => {\r\n            await res.json().then(async log => {\r\n                newWorkoutID = log._id;\r\n            });\r\n            }).catch(error => console.log(error))\r\n\r\n        // If workout is being updated\r\n        if(this.state.workoutID !== \"\"){\r\n            console.log(newWorkoutID)\r\n            console.log(this.state.workoutID)\r\n            fetch('/api/workout/update/' + this.state.workoutID, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                },\r\n                body: JSON.stringify({oldWorkoutID: this.state.workoutID, newWorkoutID: newWorkoutID})\r\n            })\r\n        }\r\n\r\n        this.props.history.push({ pathname: '/workout/'});\r\n        \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                \r\n                <AppBar width=\"100%\" pageName=\"CREATE WORKOUT\" back=\"/workout\"/>\r\n                \r\n                <form onSubmit={e => this.saveWorkout(e)}>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Workout Name\" value={this.state.workoutName} onChange={(e) => this.setState({workoutName: e.target.value})} required style={{textAlign: \"center\"}}/><br/>\r\n                    <button type=\"button\" className=\"btn btn-success container\" data-toggle=\"modal\" data-target=\"#addExercise\">ADD EXERCISE</button><br/><br/>\r\n\r\n                    {/* Prompt for user to add an exercise if none have been added */}\r\n                    {savedExercises.length? null: \r\n                    <div className=\"alert alert-info\" role=\"alert\" style={{textAlign: \"center\"}}>Add an exercise to begin creating this workout!</div>}\r\n\r\n                    {/* List all exercises that have been added to the workout */}\r\n                    {this.state.showExercises?\r\n                    <div>{savedExercises.map((exercise, index) => <div key={index}><ExerciseList exercise={exercise} index={index} delete={this.deleteExercise}/></div>)}</div>\r\n                    : null }\r\n\r\n                    <br/><button type=\"submit\" className=\"btn btn-primary container\" disabled={savedExercises.length? false:true}>SAVE WORKOUT</button> <br/><br/><br/><br/>\r\n                </form>\r\n\r\n\r\n\r\n\r\n                {/* The modal to add a new exercise to the workout */}\r\n                <form onSubmit={e => this.addExercise(e)}>\r\n                <div className=\"container\">\r\n                <div className=\"modal fade\" id=\"addExercise\">\r\n                    <div className=\"modal-dialog\"><br/><br/><br/><br/>\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4 style={{fontSize: \"22px\"}} className=\"modal-title\">Add Exercise to Workout</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n\r\n                                {/* Option to choose the exercise type */}\r\n                                Exercise Type\r\n                                <select className=\"form-control\" id=\"exerciseType\" onChange={(e) => this.exerciseTypeChange(e)}>\r\n                                    <option hidden value=\"hidden\">Choose exercise type...</option>\r\n                                    {this.state.exerciseType.map((exerciseType, index) => <option value={index} key={index}>{exerciseType}</option>)}\r\n                                </select><br/>\r\n\r\n                                {/* Option to choose the body part - shown after the exercise type */}\r\n                                {this.state.showBodyPart?\r\n                                <div>\r\n                                    Body Part\r\n                                    <select className=\"form-control\" onChange={(e) => this.setState({bodyPartValue: e.target.value, showExerciseList: true})}>\r\n                                        <option hidden >Choose a body part...</option>\r\n                                        {this.state.bodyParts.map((bodyPart, index) => <option value={index} key={index}>{bodyPart}</option>)}\r\n                                    </select><br/>\r\n                                </div>\r\n                                : null }\r\n\r\n                                {/* Option to choose the specific exercise - shown after the body part selection */}\r\n                                {this.state.showExerciseList?\r\n                                <div>\r\n                                Exercise\r\n                                <select required className=\"form-control\" onChange={(e) => this.exerciseChange(e) }>\r\n                                    <option hidden >Choose a exercise...</option>\r\n                                    {this.loadExercises()}\r\n                                </select><br/>\r\n\r\n                                {/* Option to add a custom exercise name - shown if \"custom\" is selected in the drop down list */}\r\n                                {this.state.exerciseValue === \"0\" &&\r\n                                    <div>\r\n                                    <input required type=\"text\" className=\"form-control\" placeholder=\"Exercise Name\" onChange={(e) => this.setState({customName: e.target.value})} value={this.state.customName}/><p/><p/>\r\n                                    </div>\r\n                                }\r\n                                </div>\r\n                                : null}\r\n                                \r\n                                {/* Ability to add cardio details if a cardio exercise was added */}\r\n                                {this.state.showCardioOptions?\r\n                                <div>\r\n                                <div className=\"btn-group btn-group-toggle container\" style={{padding:\"0px\",border:\"1px solid\", borderRadius:\"5px\", borderColor:\"lightgrey\"}} data-toggle=\"buttons\">\r\n                                    <label className=\"btn btn-light \">\r\n                                        <input type=\"radio\" onClick={(e) => this.setState({showTime: false, showDistance: true})}/>Distance\r\n                                    </label>\r\n                                    <label className=\"btn btn-light active\">\r\n                                        <input type=\"radio\" onClick={(e) => this.setState({showTime: true, showDistance: false})} defaultChecked/>Time\r\n                                    </label>\r\n                                </div><p/><p/>\r\n                                </div>\r\n                                : null}\r\n\r\n                                {/* Ability to add a duration */}\r\n                                {this.state.showTime?\r\n                                    <div style={{margin: \"0px auto\", width:\"90%\"}}>\r\n                                        <input required type=\"number\" inputMode=\"decimal\" onChange={(e) => this.setState({minutes: e.target.value})} className=\"form-control\" style={{width: \"47%\", textAlign:\"center\", display: \"inline-block\", margin: \"2px\"}} placeholder=\"Minutes\"/>  \r\n                                        <input required type=\"number\" inputMode=\"decimal\" max=\"59\" onChange={(e) => this.setState({seconds: e.target.value})} className=\"form-control\" style={{width: \"47%\", textAlign:\"center\", display: \"inline-block\", margin: \"2px\"}} placeholder=\"Seconds\"/>\r\n                                    </div>\r\n                                : null }\r\n                                \r\n                                {/* Ability to add a distance */}\r\n                                {this.state.showDistance?\r\n                                    <div>\r\n                                        <input required type=\"number\" step=\"any\" inputMode=\"decimal\" onChange={(e) => this.setState({distance: e.target.value})} className=\"form-control\" style={{textAlign:\"center\"}} placeholder=\"Distance (Miles)\"/>\r\n                                    </div>\r\n                                : null }\r\n\r\n                                {/* Ability to add a weight */}\r\n                                {this.state.showWeight? \r\n                                    <div>\r\n                                        <input required type=\"number\" step=\"any\" inputMode=\"decimal\" onChange={(e) => this.setState({weight: e.target.value})} className=\"form-control\" style={{textAlign:\"center\"}} placeholder=\"Weight (KG)\" /><p/><p/>\r\n                                    </div>\r\n                                :null}   \r\n\r\n                                {/* Ability to add sets and reps */}\r\n                                {this.state.showSets? \r\n                                    <div style={{margin: \"0px auto\", width:\"90%\"}}>\r\n                                        <input required type=\"number\" inputMode=\"decimal\" onChange={(e) => this.setState({sets: e.target.value})} className=\"form-control\" style={{width: \"47%\", textAlign:\"center\", display: \"inline-block\", margin: \"2px\"}} placeholder=\"Sets\"/>  \r\n                                        <input required type=\"number\" inputMode=\"decimal\" onChange={(e) => this.setState({repetitions: e.target.value})} className=\"form-control\" style={{width: \"47%\", textAlign:\"center\", display: \"inline-block\", margin: \"2px\"}} placeholder=\"Repetitions\"/>\r\n                                    </div>\r\n                                :null}\r\n                                \r\n                                {/* Ability to add notes */}\r\n                                {this.state.showNotes?\r\n                                    <p><textarea rows=\"3\" onChange={(e) => this.setState({notes: e.target.value})} className=\"form-control\" placeholder=\"Notes (e.g. Video links)\" style={{marginTop: \"20px\"}}/></p>\r\n                                :null}\r\n                            </div>\r\n\r\n                            {/* Modal close and add buttons */}\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\" disabled={this.state.disableBttn}>Add</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\n\r\nexport default class accountEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            errorMessage: '',\r\n            successMessage: '',\r\n            showError: false,\r\n            showSuccess: false,\r\n            user: '',\r\n        }\r\n        this.fillDetails();\r\n    }\r\n\r\n    onChangeFirstName(e){\r\n        this.setState({\r\n            firstName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeLastName(e){\r\n        this.setState({\r\n            lastName: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    async fillDetails(){\r\n        await this.getCurrentUser();\r\n        this.setState({\r\n            firstName: this.state.user.firstName,\r\n            lastName: this.state.user.lastName,\r\n            email: this.state.user.email,\r\n        })\r\n    }\r\n\r\n    async getCurrentUser(){\r\n        await fetch('/api/user', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n            },\r\n        }).then(async res => {\r\n            await res.json().then(log => {\r\n                this.setState({user: log.currentUser[0]})\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({\r\n            showError: false,\r\n            showSuccess: false\r\n        })\r\n        e.preventDefault();\r\n        const userData = JSON.stringify(this.state);\r\n\r\n        fetch('/api/user/update', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n            },\r\n            body: userData\r\n        }).then(res => {\r\n            res.json().then(log => {\r\n                if (log.success) {\r\n                    this.setState({\r\n                        showSuccess: true,\r\n                        successMessage: \"User account has been updated\"\r\n                    })\r\n                    // Email has been changed and user must re-login\r\n                    if (this.state.email !== this.state.user.email){\r\n                        this.setState({\r\n                            showSuccess: true,\r\n                            successMessage: \"User account has been updated. You must re-login for changes to take effect. You will now be logged out.\"\r\n                        })\r\n                        setTimeout(this.logout, 6000);\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        showError: true,\r\n                        errorMessage: \"That email is already in use\",\r\n                        firstName: this.state.user.firstName,\r\n                        lastName: this.state.user.lastName,\r\n                        email: this.state.user.email\r\n                    })\r\n                }\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    logout(){\r\n        fetch('/api/logout', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              }\r\n            }\r\n        ).then(function(res) {\r\n            res.json().then(log => {\r\n                if (log.logout === true) {\r\n                    window.location = '/'\r\n                }\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"UPDATE ACCOUNT DETAILS\" back=\"/account\"/>\r\n                \r\n                <form onSubmit={this.onSubmit} autoComplete=\"new-password\"  style={{color: \"grey\"}}>\r\n\r\n                    { this.state.showSuccess?\r\n                        <div>\r\n                        <h4 className=\"alert alert-success alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.successMessage } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n                    {this.state.showError?\r\n                        <div>\r\n                        <h4 className=\"alert alert-danger alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.errorMessage } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n\r\n                    <div className=\"form-group\">\r\n                        First Name\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"First Name\"\r\n                                value={this.state.firstName}\r\n                                onChange={this.onChangeFirstName}\r\n                                autoComplete=\"off\"\r\n                                required\r\n                        /><p/>\r\n                        Last Name\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Last Name\"\r\n                                value={this.state.lastName}\r\n                                onChange={this.onChangeLastName}\r\n                                autoComplete=\"off\"\r\n                                required\r\n                        /><p/>\r\n                        Email\r\n                        <input  type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email Address\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeEmail}\r\n                                autoComplete=\"new-password\"\r\n                                required\r\n                        />\r\n                    </div><br/>\r\n\r\n                    <input type=\"submit\" value=\"UPDATE DETAILS\" className=\"btn btn-primary container\"/>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default class accountEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCurrentPassword = this.onChangeCurrentPassword.bind(this);\r\n        this.onChangeNewPassword = this.onChangeNewPassword.bind(this);\r\n        this.onChangeNewConPassword = this.onChangeNewConPassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            currentPassword: '',\r\n            newPassword: '',\r\n            newConPassword: '',\r\n            message: '',\r\n            showError: false,\r\n            showSuccess: false\r\n        }\r\n    }\r\n\r\n    onChangeCurrentPassword(e){\r\n        this.setState({\r\n            currentPassword: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeNewPassword(e){\r\n        this.setState({\r\n            newPassword: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeNewConPassword(e) {\r\n        this.setState({\r\n            newConPassword: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({\r\n            showError: false,\r\n            showSuccess: false,\r\n        })\r\n        e.preventDefault();\r\n        if(this.state.newConPassword !== this.state.newPassword){\r\n            this.setState({\r\n                message: \"New password does not match\",\r\n                showError: true,\r\n                newPassword: \"\",\r\n                newConPassword: \"\"\r\n            })\r\n        } else {\r\n            const newPassword = JSON.stringify(this.state);\r\n\r\n            fetch('/api/user/password', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                },\r\n                body: newPassword\r\n            }).then(res => {\r\n                res.json().then(log => {\r\n                    if(log.success){\r\n                        this.setState({\r\n                            message: \"Password has been changed\",\r\n                            showSuccess: true,\r\n                            currentPassword: \"\",\r\n                            newPassword: \"\",\r\n                            newConPassword: \"\"\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            message: \"Current password is not correct\",\r\n                            showError: true,\r\n                            currentPassword: \"\",\r\n                            newPassword: \"\",\r\n                            newConPassword: \"\"\r\n                        })\r\n                    }\r\n                    \r\n                });\r\n                }).catch(error => console.log(error))\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"CHANGE PASSWORD\" back=\"/account\"/>\r\n                \r\n                <form onSubmit={this.onSubmit} autoComplete=\"new-password\"  style={{color: \"grey\"}}>\r\n                    { this.state.showError?\r\n                        <div>\r\n                        <h4 className=\"alert alert-danger alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.message } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n                    { this.state.showSuccess?\r\n                        <div>\r\n                        <h4 className=\"alert alert-success alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.message } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n\r\n                    <div className=\"form-group\">\r\n                        <input  type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Current Password\"\r\n                                value={this.state.currentPassword}\r\n                                onChange={this.onChangeCurrentPassword}\r\n                                autoComplete=\"new-password\"\r\n                                required\r\n                        /><br/><Divider/><br/>\r\n                        <input  type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"New Password\"\r\n                                value={this.state.newPassword}\r\n                                onChange={this.onChangeNewPassword}\r\n                                autoComplete=\"new-password\"\r\n                                required\r\n                        /><p/>\r\n                        <input  type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm New Password\"\r\n                                value={this.state.newConPassword}\r\n                                onChange={this.onChangeNewConPassword}\r\n                                autoComplete=\"new-password\"\r\n                                required\r\n                        />\r\n                    </div><br/>\r\n\r\n                    <input type=\"submit\" value=\"CHANGE PASSWORD\" className=\"btn btn-primary container\"/>\r\n                </form>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\n\r\nexport default class accountEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            errorMessage: '',\r\n            successMessage: '',\r\n            showError: false,\r\n            showSuccess: false,\r\n            user: '',\r\n        }\r\n        this.getCurrentUser();\r\n    }\r\n\r\n    async getCurrentUser(){\r\n        await fetch('/api/user', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n            },\r\n        }).then(async res => {\r\n            await res.json().then(log => {\r\n                this.setState({user: log.currentUser[0]})\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({\r\n            showError: false,\r\n            showSuccess: false\r\n        })\r\n\r\n        e.preventDefault();\r\n\r\n        let changeRole = window.confirm(\"Are you sure? Click OK to confirm.\");\r\n        if (changeRole){\r\n            fetch('/api/user/role', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Credentials\": true\r\n                }\r\n            }).then(res => {\r\n                res.json().then(log => {\r\n                    if(log.success){\r\n                        this.setState({\r\n                            showSuccess: true,\r\n                            successMessage: \"User role has been updated. You must re-login for changes to take effect. You will now be logged out.\"\r\n                        });\r\n                        setTimeout(this.logout, 6000);\r\n                    } else {\r\n                        this.setState({\r\n                            showError: true,\r\n                            errorMessage: \"User role could be changed at this time.\"\r\n                        });\r\n                    }\r\n                    \r\n                });\r\n                }).catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        fetch('/api/logout', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              }\r\n            }\r\n        ).then(function(res) {\r\n            res.json().then(log => {\r\n                if (log.logout === true) {\r\n                    window.location = '/'\r\n                }\r\n            });\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"USER ROLE\" back=\"/account\"/>\r\n\r\n                    { this.state.showSuccess?\r\n                        <div>\r\n                        <h4 className=\"alert alert-success alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.successMessage } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n                    {this.state.showError?\r\n                        <div>\r\n                        <h4 className=\"alert alert-danger alert-dismissible\" role=\"alert\" style={{textAlign: \"center\", fontSize: \"16px\"}}> { this.state.errorMessage } </h4>\r\n                        </div>\r\n                    : null\r\n                    }\r\n\r\n                    \r\n                    <div style={{background: \"lightgrey\", borderRadius: \"5px\", padding: \"5px\", textAlign: \"center\", fontSize: \"16px\"}}>\r\n                        You are currently using the app as a:\r\n                        {this.state.user.ptBool?\r\n                            <p style={{fontWeight: \"bold\"}}>Personal Trainer</p>\r\n                        :\r\n                            <p style={{fontWeight: \"bold\"}}>Client</p>\r\n                        }\r\n                    </div><br/>\r\n\r\n                    {this.state.user.ptBool? \r\n                    <div>\r\n                        <p className=\"alert alert-danger\" >Changing this would remove all of your clients assigned to you and remove the ability to create or assign workouts.</p>\r\n                        <input type=\"button\" value=\"CHANGE TO A CLIENT\" onClick={this.onSubmit} className=\"btn btn-primary container\"/>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                         <p className=\"alert alert-danger\" >Changing this would remove your workouts and your assigned personal trainer.</p>\r\n                         <input type=\"button\" value=\"CHANGE TO A PERSONAL TRAINER\" onClick={this.onSubmit} className=\"btn btn-primary container\"/>\r\n                    </div>\r\n                    }\r\n                    \r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport AppBar from '../navigation/appBar.component';\r\nimport ExerciseList from './exerciseList.component';\r\n\r\nvar completedExercises = [];\r\nexport default class Workout extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.finishWorkout = this.finishWorkout.bind(this);\r\n        this.completedExercise = this.completedExercise.bind(this);\r\n        this.missedExercise = this.missedExercise.bind(this);\r\n\r\n        this.state = {\r\n            notes: \"\",\r\n        };\r\n\r\n        if(typeof this.props.location.workout === \"undefined\"){\r\n            window.location = \"/workout\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n    }\r\n\r\n    completedExercise(index){\r\n        completedExercises[index] = {completed: true, exerciseID: this.props.location.workout.exercises[index]._id};\r\n    }\r\n\r\n    missedExercise(index){\r\n        completedExercises[index] = {completed: false, exerciseID: this.props.location.workout.exercises[index]._id};\r\n    }\r\n\r\n    async finishWorkout(){\r\n        await fetch('/api/workout/record', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Credentials\": true\r\n          },\r\n          body: JSON.stringify({workoutID: this.props.location.workout.workout._id, \r\n                                completedExercises: completedExercises, \r\n                                notes: this.state.notes\r\n                            })\r\n    }).then(async res => {\r\n        await res.json().then(async log => {\r\n            if(log.success){\r\n                this.props.history.push({\r\n                    pathname: '/workout',\r\n                    workoutRecorded: true,\r\n                });\r\n            }\r\n        });\r\n        }).catch(error => console.log(error))\r\n\r\n        console.log(this.props.location.workout.workout._id)\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <AppBar width=\"100%\" pageName=\"RECORD WORKOUT\" back=\"/workout\"/>\r\n                <h2 style={{textAlign: \"center\"}}>{this.props.location.workout.workout.name}</h2>\r\n\r\n                <div>\r\n                    {this.props.location.workout.exercises.map((exercise, index) => \r\n                        <div key={index}><ExerciseList exercise={exercise} index={index} complete={this.completedExercise} missed={this.missedExercise}/></div>\r\n                    )}\r\n                </div>\r\n\r\n                <textarea rows=\"3\" onChange={(e) => this.setState({notes: e.target.value})} value={this.state.notes} className=\"form-control\" placeholder=\"How did it go?\" style={{marginTop: \"20px\"}}/><br/>\r\n                \r\n                <button className=\"btn btn-primary container\" onClick={this.finishWorkout} >Finish Workout</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Home from \"./components/home.component\";\r\nimport HomePT from \"./components/pt/home.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Workout from \"./components/client/workout.component\";\r\nimport WorkoutPT from \"./components/pt/workout.component\";\r\nimport Messages from \"./components/messages.component\";\r\nimport Chat from \"./components/chat.component\";\r\nimport Account from \"./components/account/account.component\";\r\nimport BottomNav from  './components/navigation/bottomNavigation.component';\r\nimport Body from './components/account/body.component';\r\nimport NewWorkout from './components/pt/newWorkout.component';\r\nimport AccountEdit from './components/account/accountEdit.component';\r\nimport ChangePassword from './components/account/changePassword.component';\r\nimport UserRole from './components/account/userRole.component';\r\nimport RecordWorkout from './components/client/recordWorkout.component';\r\n\r\nfunction PrivateRoute ({component: Component, authed, wasInitialised, ...rest}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => authed === true\r\n        ? <Component {...props} />\r\n        : !wasInitialised? \"\"\r\n        : <Redirect to={{pathname: '/'}} />}\r\n    />\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      auth: false,\r\n      ptBool: false,\r\n      wasInitialised: false,\r\n    }\r\n    this.checkAuth()\r\n  }\r\n\r\n  async componentDidMount(){\r\n    //await this.checkAuth();\r\n  }\r\n\r\n  async checkAuth() {\r\n   await fetch('/api/auth/', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true\r\n              }\r\n            }\r\n        ).then(async res => {\r\n            await res.json().then(log => {\r\n                if (log.redirect === \"/home\") {\r\n                  this.setState({\r\n                    auth: true,\r\n                    ptBool: log.ptBool, \r\n                    wasInitialised: true\r\n                  });\r\n               } else {\r\n                  this.setState({\r\n                    auth: false, \r\n                    wasInitialised: true\r\n                  });\r\n               }\r\n            });\r\n            }).catch(error => console.log(error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n\r\n        {this.state.auth? <BottomNav /> : null}\r\n\r\n        \r\n        <div className=\"container\" >\r\n          <br/>\r\n          <Route path=\"/\" exact component={Login}/>\r\n          <Route path=\"/register\" exact component={Register}/>\r\n          {this.state.ptBool?\r\n          <Switch>\r\n            <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/home' component={HomePT} />\r\n            <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/workout' component={WorkoutPT} />\r\n            <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/workout/new' component={NewWorkout} />\r\n          </Switch>\r\n          :\r\n          <Switch>\r\n            <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/home' component={Home} />\r\n            <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/workout' component={Workout} />\r\n            <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/workout/record' component={RecordWorkout} />\r\n          </Switch>\r\n          }\r\n          \r\n          \r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/messages' component={Messages} />\r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/chat' component={Chat} />\r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/account' component={Account} />\r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/account/body' component={Body} />\r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/account/update' component={AccountEdit} />\r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/account/password' component={ChangePassword} />\r\n          <PrivateRoute authed={this.state.auth} wasInitialised={this.state.wasInitialised} exact path='/account/role' component={UserRole} />\r\n          {/* <Route render={() => <Redirect to=\"/home\" />} /> Used to catch all routes */}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import \"isomorphic-fetch\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}